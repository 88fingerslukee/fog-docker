# FOG Docker Environment Configuration
# Copy this file to .env and modify the values for your environment
#
# This file contains all available environment variables for FOG Docker.
# Variables marked as REQUIRED must be set before starting the container.
# Optional variables have sensible defaults and can be left unmodified.
#
# For detailed documentation, see the README.md file.

# =============================================================================
# REQUIRED CONFIGURATION
# =============================================================================

# FOG Web Host (REQUIRED - No default)
# This should be your server's IP address or FQDN
# For reverse proxy setups, use the FQDN
FOG_WEB_HOST=

# Database Root Password (REQUIRED - No default)
# Generate a secure password for the MySQL root user
FOG_DB_ROOT_PASSWORD=

# =============================================================================
# OPTIONAL CONFIGURATION
# =============================================================================

# FOG Version
# The FOG version to install (stable, dev-branch, or specific version)
FOG_VERSION=stable

# FOG Git Repository (if using custom fork)
FOG_GIT_URL=https://github.com/FOGProject/fogproject.git

# Web Configuration
FOG_WEB_ROOT=/fog
FOG_APACHE_PORT=80
FOG_APACHE_SSL_PORT=443
FOG_APACHE_EXPOSED_PORT=80
FOG_APACHE_EXPOSED_SSL_PORT=443
FOG_HTTPS_ENABLED=false
FOG_HTTP_PROTOCOL=https

# Database Configuration
FOG_DB_NAME=fog
FOG_DB_USER=fogmaster
FOG_DB_PASS=fogmaster123

# Network Configuration
# TFTP server hostname/IP (for PXE boot)
FOG_TFTP_HOST=localhost

# NFS server hostname/IP (for image storage access)
FOG_NFS_HOST=localhost

# Wake-on-LAN server hostname/IP (for WOL functionality)
FOG_WOL_HOST=localhost

# Network interface for multicast operations
FOG_MULTICAST_INTERFACE=eth0

# FTP Configuration
FOG_FTP_USER=fogproject
FOG_FTP_PASS=fogftp123

# SSL Configuration
# Choose one of the following HTTPS scenarios:

# Scenario 1: External certificates (Let's Encrypt, commercial, etc.)
# FOG_HTTPS_ENABLED=true
# FOG_SSL_GENERATE_SELF_SIGNED=false
# FOG_SSL_CERT_FILE=fullchain.pem
# FOG_SSL_KEY_FILE=privkey.pem
# Mount certificates as volume: /path/to/certs:/opt/fog/snapins/ssl:ro

# Scenario 2: Self-signed certificates (iPXE will be recompiled with CA trust)
# FOG_HTTPS_ENABLED=true
# FOG_SSL_GENERATE_SELF_SIGNED=true
# FOG_SSL_CN=192.168.1.100
# FOG_SSL_SAN=alt1.domain.com,alt2.domain.com

# Scenario 3: Reverse proxy (no SSL in container, proxy handles HTTPS)
# FOG_HTTPS_ENABLED=false
# FOG_SSL_GENERATE_SELF_SIGNED=false

# Scenario 4: HTTP only (default - no encryption)
# FOG_HTTPS_ENABLED=false
# FOG_SSL_GENERATE_SELF_SIGNED=false

# Current configuration (modify as needed):
FOG_SSL_CERT_FILE=server.crt
FOG_SSL_KEY_FILE=server.key
FOG_SSL_GENERATE_SELF_SIGNED=true
FOG_SSL_CN=
FOG_SSL_SAN=

# Secure Boot Configuration
# Enable Secure Boot support (requires shim binaries and proper UEFI setup)
FOG_SECURE_BOOT_ENABLED=false

# Secure Boot Paths (optional - uses defaults if not specified)
# FOG_SECURE_BOOT_KEYS_DIR=/opt/fog/secure-boot/keys
# FOG_SECURE_BOOT_CERT_DIR=/opt/fog/secure-boot/certs
# FOG_SECURE_BOOT_SHIM_DIR=/opt/fog/secure-boot/shim
# FOG_SECURE_BOOT_MOK_IMG=/opt/fog/secure-boot/mok-certs.img

# DHCP Configuration
FOG_DHCP_ENABLED=false
FOG_DHCP_START_RANGE=192.168.1.100
FOG_DHCP_END_RANGE=192.168.1.200
FOG_DHCP_BOOTFILE=undionly.kpxe
FOG_DHCP_DNS=8.8.8.8

# Data Directory Configuration
# Persistent data directory (default: /data)
# FOG_DATA_DIR=/data

# Timezone Configuration
# Set the timezone for the container (default: UTC)
# Examples: UTC, America/New_York, Europe/London, Asia/Tokyo
TZ=UTC

# Debug Configuration
# Enable debug mode for troubleshooting
DEBUG=false

# Force First Start Init (Debugging)
# Force FOG first start initialization even if already completed
# FORCE_FIRST_START_INIT=false
